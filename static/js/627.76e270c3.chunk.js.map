{"version":3,"file":"static/js/627.76e270c3.chunk.js","mappings":"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","sources":["components/MoviesTrendingList/MovieTrendingItem/MovieTrendingItem.styled.js","components/MoviesTrendingList/MovieTrendingItem/MovieTrendingItem.jsx","components/SearchBar/Searchbar.jsx","components/MoviesSearchingList/MoviesSearchingList.jsx","components/Button/Button.jsx","pages/MoviesPage.jsx","services/api.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","../node_modules/prop-types/lib/ReactPropTypesSecret.js"],"sourcesContent":["import styled from 'styled-components';\n\n\nexport const MovieItemStyled = styled.li`\nmax-width: 185px;\n`\n","import PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport { MovieItemStyled } from './MovieTrendingItem.styled';\n\nconst MovieTrendingItem = ({ movieItem }) => {\n  return (\n    <MovieItemStyled>\n      <Link to={`/movies/${movieItem.id}`}>\n        <div>\n          {movieItem.poster_path === null ? (\n            <img\n              alt={movieItem.original_title}\n              src=\"https://via.placeholder.com/185x100\"\n            />\n          ) : (\n            <img\n              alt={movieItem.poster_path}\n              src={`http://image.tmdb.org/t/p/w185${movieItem.poster_path}`}\n            ></img>\n          )}\n          <p>{movieItem.original_title}</p>\n        </div>\n      </Link>\n    </MovieItemStyled>\n  );\n};\n\nexport default MovieTrendingItem;\n\nMovieTrendingItem.propType = {\n  movieItem: PropTypes.object,\n};\n","import React, { useState } from 'react';\n\nfunction Searchbar({ value, onChange }) {\n  const [valueQuery, setValueQuery] = useState('');\n\n  const changeHandler = evt => {\n    setValueQuery(evt.target.value);\n  };\n\n  const onSubmit = evt => {\n    evt.preventDefault();\n    onChange(valueQuery);\n    setValueQuery('');\n  };\n\n  return (\n    <div>\n      <form onSubmit={onSubmit}>\n        <input\n          type=\"text\"\n          name=\"query\"\n          placeholder=\"Search . . . \"\n          value={valueQuery}\n          onChange={changeHandler}\n        />\n      </form>\n    </div>\n  );\n}\n\nexport default Searchbar;\n","import MovieTrendingItem from 'components/MoviesTrendingList/MovieTrendingItem/MovieTrendingItem';\nimport PropTypes from 'prop-types';\n\nconst MoviesSearchingList = ({ searchList }) => {\n  if (searchList === 0) {\n    return;\n  }\n\n  return (\n    <ul>\n      {searchList.map(movie => (\n        <MovieTrendingItem key={movie.id} movieItem={movie} />\n      ))}\n    </ul>\n  );\n};\n\nexport default MoviesSearchingList;\n\nMoviesSearchingList.propTypes = {\n  searchList: PropTypes.array,\n};\n","import PropTypes from 'prop-types';\n\nexport const Button = ({ onChangePage, title }) => {\n  return (\n    <div>\n      <button type=\"submit\" onClick={onChangePage}>\n        {title}\n      </button>\n    </div>\n  );\n};\n\nButton.propTypes = {\n  onChangePage: PropTypes.func,\n  title: PropTypes.string,\n};\n","import React, { useState, useEffect } from 'react';\nimport Searchbar from 'components/SearchBar/Searchbar';\nimport { fetchMovieSearch } from 'services/api';\nimport { useSearchParams } from 'react-router-dom';\nimport { RotatingLines } from 'react-loader-spinner';\nimport MoviesSearchingList from 'components/MoviesSearchingList/MoviesSearchingList';\n// import { useDeferredValue } from 'react';\nimport { Button } from 'components/Button/Button';\n\nconst MoviesPage = () => {\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [moviesList, setMoviesList] = useState(null);\n  const [page, setPage] = useState(1);\n  const [totalResults, setTotalResults] = useState(null);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [totalPages, setTotalPages] = useState(null);\n\n  const queryMovie = searchParams.get('query') ?? '';\n  const pageMovie = Number(searchParams.get('page') ?? '');\n  console.log('pageMovie', pageMovie);\n\n  useEffect(() => {\n    async function fetchMovieList() {\n      try {\n        setIsLoading(true);\n        const movies = await fetchMovieSearch(queryMovie, page);\n        setMoviesList(movies.results);\n        setTotalResults(movies.total_results);\n        setTotalPages(movies.total_pages);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchMovieList();\n  }, [page, queryMovie]);\n\n  const updateQueryString = query => {\n    const querySearchParams = query !== '' ? { query } : {};\n    const pageSerchParams = page !== '' ? { page } : {};\n    setPage(1);\n    setSearchParams(querySearchParams, pageSerchParams);\n  };\n\n  const handleBtnIncrementPage = () => {\n    setPage(prevPage => prevPage + 1);\n  };\n  const handleBtnDecrementPage = () => {\n    if (page !== 1) {\n      setPage(prevPage => prevPage - 1);\n    }\n  };\n  return (\n    <main>\n      <Searchbar onChange={updateQueryString} />\n      <div>\n        {error !== null && <p>Oops, something went wrong. please, try later</p>}\n        {isLoading && (\n          <RotatingLines\n            strokeColor=\"grey\"\n            strokeWidth=\"5\"\n            animationDuration=\"0.75\"\n            width=\"96\"\n            visible={true}\n          />\n        )}\n        <p>Total pages: {totalPages}</p>\n        {moviesList !== null && <MoviesSearchingList searchList={moviesList} />}\n        <p>--Page {page}--</p>\n        {moviesList?.length < totalResults / page && (\n          <>\n            <Button\n              onChangePage={handleBtnDecrementPage}\n              title=\"Previous page\"\n            />\n            <Button onChangePage={handleBtnIncrementPage} title=\"Next page\" />\n          </>\n        )}\n      </div>\n    </main>\n  );\n};\n\nexport default MoviesPage;\n","import axios from \"axios\";\n\nconst BASE_URL = \"https://api.themoviedb.org\";\nconst API_KEY = 'b4322bdf3e2859ea67c5f11069df4ded';\nconst options = {\n    method: 'GET',\n    headers: {\n        accept: 'application/json',\n        Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiNDMyMmJkZjNlMjg1OWVhNjdjNWYxMTA2OWRmNGRlZCIsInN1YiI6IjY0ZGNhYmJkYjc3ZDRiMTE0MzQ3NWI0NiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.CqbSGDQtmUw3a5Fq7RSi0CObHLk2zkAuH1e2KHzFsMQ'\n    }\n};\n\n\nexport const fetchTrendingMovies = async () => {\n    const { data } = await axios.get(`${BASE_URL}/3/trending/movie/day?language=en-US&api_key=${API_KEY}`, options);\n    return data;\n}\n\nexport const fetchMovieDetails = async (movieId) => {\n    const { data } = await axios.get(`${BASE_URL}/3/movie/${movieId}?language=en-US&api_key=${API_KEY}`, options);\n\n    return data;\n}\n\nexport const fetchMovieCredits = async (movieId) => {\n    const { data } = await axios.get(`${BASE_URL}/3/movie/${movieId}/credits?language=en-US&api_key=${API_KEY}`, options);\n\n    return data;\n}\n\nexport const fetchMovieReviews = async (movieId) => {\n    const { data } = await axios.get(`${BASE_URL}/3/movie/${movieId}/reviews?language=en-US&api_key=${API_KEY}`, options);\n\n    return data;\n}\n\nexport const fetchMovieSearch = async (query, page) => {\n    const { data } = await axios.get(`${BASE_URL}/3/search/movie?query=${query}&include_adult=false&language=en-US&page=${page}&api_key=${API_KEY}`, options);\n    return data;\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n"],"names":["MovieItemStyled","styled","MovieTrendingItem","movieItem","to","id","poster_path","alt","original_title","src","propType","PropTypes","value","onChange","useState","valueQuery","setValueQuery","onSubmit","evt","preventDefault","type","name","placeholder","target","searchList","map","movie","Button","onChangePage","title","onClick","error","setError","isLoading","setIsLoading","moviesList","setMoviesList","page","setPage","totalResults","setTotalResults","useSearchParams","searchParams","setSearchParams","totalPages","setTotalPages","queryMovie","get","pageMovie","Number","console","log","useEffect","fetchMovieSearch","movies","results","total_results","total_pages","message","fetchMovieList","query","querySearchParams","pageSerchParams","strokeColor","strokeWidth","animationDuration","width","visible","length","prevPage","BASE_URL","API_KEY","options","method","headers","accept","Authorization","fetchTrendingMovies","axios","data","fetchMovieDetails","movieId","fetchMovieCredits","fetchMovieReviews","ReactPropTypesSecret","require","emptyFunction","emptyFunctionWithReset","resetWarningCache","module","exports","shim","props","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes"],"sourceRoot":""}