{"version":3,"file":"static/js/779.4b1cb085.chunk.js","mappings":"6TAEaA,EAAoBC,EAAAA,GAAAA,GAAH,2CAGjBC,EAAqBD,EAAAA,GAAAA,EAAH,6DAIlBE,EAAoBF,EAAAA,GAAAA,GAAH,8C,SCEjBG,EAAU,WACrB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,MAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA8BJ,EAAAA,EAAAA,UAAS,MAAvC,eAAOK,EAAP,KAAgBC,EAAhB,KACA,GAAwCN,EAAAA,EAAAA,UAAS,GAAjD,eAAOO,EAAP,KAAqBC,EAArB,KAsBA,OApBAC,EAAAA,EAAAA,YAAU,WAAM,wCAKd,oGAEIP,GAAa,GAFjB,UAG+BQ,EAAAA,EAAAA,IAAkBZ,GAHjD,OAGUa,EAHV,OAIIL,EAAWK,EAAaC,SACxBJ,EAAgBG,EAAaE,eALjC,gDAOIT,EAAS,KAAMU,SAPnB,yBASIZ,GAAa,GATjB,6EALc,sBACTJ,GADS,mCAiBdiB,EACD,GAAE,CAACjB,KAGF,2BACa,OAAVK,IAAkB,uBAAG,kDACrBF,IACC,SAAC,KAAD,CACEe,YAAY,OACZC,YAAY,IACZC,kBAAkB,OAClBC,MAAM,KACNC,SAAS,IAGA,OAAZf,IACC,SAACZ,EAAD,UACGY,EAAQgB,KAAI,SAAAC,GAAG,OACd,UAAC1B,EAAD,YACE,SAACD,EAAD,UAAqB2B,EAAIC,UACzB,uBAAID,EAAIE,YAFcF,EAAIG,GADd,MAQF,IAAjBlB,IAAsB,uBAAG,gDAG/B,EAED,G,mMC/DMmB,EAAW,6BACXC,EAAU,mCACVC,EAAU,CACZC,OAAQ,MACRC,QAAS,CACLC,OAAQ,mBACRC,cAAe,+NAKVC,EAAmB,mCAAG,sGACRC,EAAAA,EAAAA,IAAA,UAAaR,EAAb,wDAAqEC,GAAWC,GADxE,uBACvBO,EADuB,EACvBA,KADuB,kBAExBA,GAFwB,2CAAH,qDAKnBC,EAAiB,mCAAG,WAAOtC,GAAP,yFACNoC,EAAAA,EAAAA,IAAA,UAAaR,EAAb,oBAAiC5B,EAAjC,mCAAmE6B,GAAWC,GADxE,uBACrBO,EADqB,EACrBA,KADqB,kBAGtBA,GAHsB,2CAAH,sDAMjBE,EAAiB,mCAAG,WAAOvC,GAAP,yFACNoC,EAAAA,EAAAA,IAAA,UAAaR,EAAb,oBAAiC5B,EAAjC,2CAA2E6B,GAAWC,GADhF,uBACrBO,EADqB,EACrBA,KADqB,kBAGtBA,GAHsB,2CAAH,sDAMjBzB,EAAiB,mCAAG,WAAOZ,GAAP,yFACNoC,EAAAA,EAAAA,IAAA,UAAaR,EAAb,oBAAiC5B,EAAjC,2CAA2E6B,GAAWC,GADhF,uBACrBO,EADqB,EACrBA,KADqB,kBAGtBA,GAHsB,2CAAH,sDAMjBG,EAAgB,mCAAG,WAAOC,EAAOC,GAAd,yFACLN,EAAAA,EAAAA,IAAA,UAAaR,EAAb,iCAA8Ca,EAA9C,oDAA+FC,EAA/F,oBAA+Gb,GAAWC,GADrH,uBACpBO,EADoB,EACpBA,KADoB,kBAErBA,GAFqB,2CAAH,uD","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ReviewsListStyled = styled.ul`\nmax-width: 950px;\n`\nexport const ReviewsTitleStyled = styled.p`\nfont-size: 18px;\nfont-weight: 500;\n`\nexport const ReviewsItemStyled = styled.li`\nmargin-bottom: 45px;\n`","import React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { RotatingLines } from 'react-loader-spinner';\nimport { fetchMovieReviews } from 'services/api';\nimport {\n  ReviewsListStyled,\n  ReviewsTitleStyled,\n  ReviewsItemStyled,\n} from './Reviews.styled';\n\nexport const Reviews = () => {\n  const { movieId } = useParams();\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [reviews, setReviews] = useState(null);\n  const [totalReviews, setTotalReviews] = useState(0);\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n\n    async function movieReviews() {\n      try {\n        setIsLoading(true);\n        const fetchReviews = await fetchMovieReviews(movieId);\n        setReviews(fetchReviews.results);\n        setTotalReviews(fetchReviews.total_results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    movieReviews();\n  }, [movieId]);\n\n  return (\n    <div>\n      {error !== null && <p>Oops, something went wrong. please, try later</p>}\n      {isLoading && (\n        <RotatingLines\n          strokeColor=\"grey\"\n          strokeWidth=\"5\"\n          animationDuration=\"0.75\"\n          width=\"96\"\n          visible={true}\n        />\n      )}\n      {reviews !== null && (\n        <ReviewsListStyled>\n          {reviews.map(rev => (\n            <ReviewsItemStyled key={rev.id}>\n              <ReviewsTitleStyled>{rev.author}</ReviewsTitleStyled>\n              <p>{rev.content}</p>\n            </ReviewsItemStyled>\n          ))}\n        </ReviewsListStyled>\n      )}\n      {totalReviews === 0 && <p>We don't have any reviews for this movie.</p>}\n    </div>\n  );\n};\n\nexport default Reviews;\n","import axios from \"axios\";\n\nconst BASE_URL = \"https://api.themoviedb.org\";\nconst API_KEY = 'b4322bdf3e2859ea67c5f11069df4ded';\nconst options = {\n    method: 'GET',\n    headers: {\n        accept: 'application/json',\n        Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiNDMyMmJkZjNlMjg1OWVhNjdjNWYxMTA2OWRmNGRlZCIsInN1YiI6IjY0ZGNhYmJkYjc3ZDRiMTE0MzQ3NWI0NiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.CqbSGDQtmUw3a5Fq7RSi0CObHLk2zkAuH1e2KHzFsMQ'\n    }\n};\n\n\nexport const fetchTrendingMovies = async () => {\n    const { data } = await axios.get(`${BASE_URL}/3/trending/movie/day?language=en-US&api_key=${API_KEY}`, options);\n    return data;\n}\n\nexport const fetchMovieDetails = async (movieId) => {\n    const { data } = await axios.get(`${BASE_URL}/3/movie/${movieId}?language=en-US&api_key=${API_KEY}`, options);\n\n    return data;\n}\n\nexport const fetchMovieCredits = async (movieId) => {\n    const { data } = await axios.get(`${BASE_URL}/3/movie/${movieId}/credits?language=en-US&api_key=${API_KEY}`, options);\n\n    return data;\n}\n\nexport const fetchMovieReviews = async (movieId) => {\n    const { data } = await axios.get(`${BASE_URL}/3/movie/${movieId}/reviews?language=en-US&api_key=${API_KEY}`, options);\n\n    return data;\n}\n\nexport const fetchMovieSearch = async (query, page) => {\n    const { data } = await axios.get(`${BASE_URL}/3/search/movie?query=${query}&include_adult=false&language=en-US&page=${page}&api_key=${API_KEY}`, options);\n    return data;\n}\n"],"names":["ReviewsListStyled","styled","ReviewsTitleStyled","ReviewsItemStyled","Reviews","movieId","useParams","useState","isLoading","setIsLoading","error","setError","reviews","setReviews","totalReviews","setTotalReviews","useEffect","fetchMovieReviews","fetchReviews","results","total_results","message","movieReviews","strokeColor","strokeWidth","animationDuration","width","visible","map","rev","author","content","id","BASE_URL","API_KEY","options","method","headers","accept","Authorization","fetchTrendingMovies","axios","data","fetchMovieDetails","fetchMovieCredits","fetchMovieSearch","query","page"],"sourceRoot":""}